# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = xgboost-distribution
description = XGBoost for probabilistic prediction.
author = Christian Donnerer
author_email = christian.donnerer@gmail.com
license = MIT
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/CDonnerer/xgboost-distribution/
# Add here related links, for example:
project_urls =
    Documentation = https://xgboost-distribution.readthedocs.io/en/latest/?badge=latest


# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.10

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    scikit-learn
    # for x64 windows and linux we use xgboost-cpu
    xgboost-cpu>=3.0.0;platform_machine=="x86_64" and (platform_system=="Windows" or platform_system=="Linux")
    xgboost>=3.0.0;platform_machine!="x86_64" or (platform_system!="Windows" and platform_system!="Linux")



[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install xgboost_distribution[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pandas
    pytest
    pytest-cov

gpu =
    xgboost>=2.1.4

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = xgboost_distribution.module:function
# For example:
# console_scripts =
#     fibonacci = xgboost_distribution.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesojme.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    --cov xgboost_distribution --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
markers =
    slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[mypy]
ignore_missing_imports = True
disallow_untyped_defs = True
follow_imports = silent

[isort]
profile = black
known_setuptools=setuptools,pkg_resources
known_first_party = xgboost_distribution
known_test=pytest
sections=FUTURE,STDLIB,SETUPTOOLS,TEST,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = xgboost_distribution
extensions =
